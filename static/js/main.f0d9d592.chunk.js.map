{"version":3,"sources":["components/flag/tick.svg","home/images/demo.gif","home/images/sloth.png","images/leaves.png","components/flag/styles.tsx","components/flag/view.tsx","components/flag/index.tsx","components/code-block/styles.tsx","components/code-block/index.tsx","components/code-block/view.tsx","home/styles.tsx","home/index.tsx","home/view.tsx","styles.tsx","App.tsx","serviceWorker.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","FlagTypes","FlagWrapper","styled","div","_templateObject","props","type","INFO","WARNING","ERROR","TitleContainer","_templateObject2","Icon","span","_templateObject3","src","Title","h2","_templateObject4","Description","_templateObject5","Flag","_this$props","this","title","description","react_default","a","createElement","tick","React","Component","Container","styles_templateObject","clipboard","Pre","pre","styles_templateObject2","LineNo","styles_templateObject3","CodeBlock","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","copyToClipboard","text","dummy","document","body","appendChild","setAttribute","select","execCommand","removeChild","onClick","setState","isFlagHidden","setTimeout","renderFlag","concat","flag","state","language","code","es","assign","prismDefaultProps","theme","nightOwlTheme","_ref","className","style","tokens","getLineProps","getTokenProps","map","line","i","key","token","j","Heading1","h1","home_styles_templateObject","Heading2","home_styles_templateObject2","GitHubButtonContainer","home_styles_templateObject3","Image","img","styles_templateObject4","styles_templateObject5","Home","getInstallWithNPMCode","getInstallWithYarnCode","getExampleScriptCode","npmInstallCode","yarnInstallCode","_this$state","react_github_btn","href","data-icon","data-size","aria-label","sloth","alt","styles_Description","code_block","demo","GithubCorner_default","size","bannerColor","GlobalStyle","createGlobalStyle","src_styles_templateObject","AppContainer","src_styles_templateObject2","App","leaves","home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0d9d592.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tick.4b93446c.svg\";","module.exports = __webpack_public_path__ + \"static/media/demo.10a123c4.gif\";","module.exports = __webpack_public_path__ + \"static/media/sloth.ca47ce7b.png\";","module.exports = __webpack_public_path__ + \"static/media/leaves.ad628077.png\";","import styled from 'styled-components';\nimport { FlagTypes } from './view';\n\nexport interface FlagProps {\n  type: FlagTypes;\n}\n\nexport const FlagWrapper = styled.div`\n  @-webkit-keyframes fadeinout {\n    0% {\n      opacity: 0;\n    }\n    25% {\n      opacity: 1;\n    }\n    75% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n\n  @keyframes fadeinout {\n    0% {\n      opacity: 0;\n    }\n    25% {\n      opacity: 1;\n    }\n    75% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n\n  position: fixed;\n  bottom: 30px;\n  left: 30px;\n  @media only screen and (max-width: 760px),\n    (min-device-width: 768px) and (max-device-width: 1024px) {\n    text-align: center;\n    left: 10px;\n    right: 10px;\n    top: 10px;\n    bottom: unset;\n    z-index: 1001;\n  }\n  padding: 0 10px;\n  border-radius: 6px;\n  border: 2px solid\n    ${(props: FlagProps) => {\n      const { type } = props;\n      switch (type) {\n        case FlagTypes.INFO:\n          return 'rgba(128, 190, 102, 0.7)';\n        case FlagTypes.WARNING:\n          return 'yellow';\n        case FlagTypes.ERROR:\n          return 'crimson';\n        default:\n          return 'rgba(128, 190, 102, 0.7)';\n      }\n    }};\n  background: ${(props: FlagProps) => {\n    const { type } = props;\n    switch (type) {\n      case FlagTypes.INFO:\n        return 'rgb(191, 253, 151)';\n      case FlagTypes.WARNING:\n        return 'yellow';\n      case FlagTypes.ERROR:\n        return 'crimson';\n      default:\n        return 'rgb(191, 253, 151)';\n    }\n  }};\n  text-align: left;\n  opacity: 0;\n  -webkit-animation: fadeinout 3s linear forwards;\n  animation: fadeinout 3s linear forwards;\n`;\n\nexport const TitleContainer = styled.div``;\n\nexport interface IconProps {\n  src: string;\n}\n\nexport const Icon = styled.span`\n  display: inline-block;\n  height: 20px;\n  width: 20px;\n  margin-right: 10px;\n  background-size: contain;\n  background-image: url('${(props: IconProps) => props.src}');\n`;\n\nexport const Title = styled.h2`\n  display: inline-block;\n  margin-bottom: 0;\n`;\n\nexport const Description = styled.p``;\n","import React from 'react';\n\nimport {\n  Description,\n  FlagWrapper,\n  Icon,\n  Title,\n  TitleContainer\n} from './styles';\nimport tick from './tick.svg';\n\nexport enum FlagTypes {\n  INFO = 'info',\n  WARNING = 'warning',\n  ERROR = 'error'\n}\n\nexport interface Props {\n  type: FlagTypes;\n  title: string;\n  description: string | React.ElementType;\n}\n\nclass Flag extends React.Component<Props> {\n  public render() {\n    const { title, description, type } = this.props;\n    return (\n      <FlagWrapper type={type}>\n        <TitleContainer>\n          <Icon src={tick} />\n          <Title>{title}</Title>\n        </TitleContainer>\n        <Description>{description}</Description>\n      </FlagWrapper>\n    );\n  }\n}\n\nexport default Flag;\n","import { default as Flag } from './view';\nexport default Flag;\n","import styled from 'styled-components';\n\nexport interface ContainerProps {\n  clipboard?: string;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  font-family: sans-serif;\n  display: table;\n  @media only screen and (max-width: 760px),\n    (min-device-width: 768px) and (max-device-width: 1024px) {\n    display: block;\n  }\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  cursor: ${(props: ContainerProps) => (props.clipboard ? 'copy' : 'inherit')};\n`;\n\nexport const Pre = styled.pre`\n  text-align: left;\n  margin: 1em 0;\n  padding: 0.5em;\n  & .token-line {\n    line-height: 1.3em;\n    height: 1.3em;\n  }\n  overflow: scroll;\n`;\n\nexport const LineNo = styled.span`\n  display: inline-block;\n  width: 2em;\n  user-select: none;\n  opacity: 0.3;\n`;\n","import { default as CodeBlock } from './view';\nexport default CodeBlock;\n","import Highlight, {\n  defaultProps as prismDefaultProps,\n  Language\n} from 'prism-react-renderer';\n// tslint:disable-next-line:no-submodule-imports\nimport nightOwlTheme from 'prism-react-renderer/themes/nightOwl';\nimport React from 'react';\n\nimport Flag from '../flag';\nimport { FlagTypes } from '../flag/view';\nimport { Container, LineNo, Pre } from './styles';\n\nexport interface Props {\n  language: Language;\n  code: string;\n  clipboard?: string;\n}\n\nexport interface State {\n  isFlagHidden: boolean;\n}\n\nclass CodeBlock extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isFlagHidden: true\n    };\n  }\n\n  public copyToClipboard = (text: string) => {\n    const dummy = document.createElement('input');\n    document.body.appendChild(dummy);\n    dummy.setAttribute('value', text);\n    dummy.select();\n    document.execCommand('copy');\n    document.body.removeChild(dummy);\n  };\n\n  public onClick = () => {\n    const { clipboard } = this.props;\n    if (clipboard) {\n      this.copyToClipboard(clipboard);\n      this.setState({ isFlagHidden: false });\n      setTimeout(() => {\n        this.setState({ isFlagHidden: true });\n      }, 3000);\n    }\n  };\n\n  public renderFlag = () => {\n    const { clipboard } = this.props;\n    const title = 'Copied to clipboard';\n    const description = `Copied \"${clipboard}\" to the clipboard`;\n    return (\n      <Flag type={FlagTypes.INFO} title={title} description={description} />\n    );\n  };\n\n  public render() {\n    const { language, code, clipboard } = this.props;\n    const { isFlagHidden } = this.state;\n    return (\n      <Container clipboard={clipboard} onClick={this.onClick}>\n        <Highlight\n          {...prismDefaultProps}\n          theme={nightOwlTheme}\n          language={language}\n          code={code}\n        >\n          {({ className, style, tokens, getLineProps, getTokenProps }) => (\n            <Pre className={className} style={style}>\n              {tokens.map((line, i) => (\n                <div key={i} {...getLineProps({ line, key: i })}>\n                  <LineNo>{i + 1}</LineNo>\n                  {line.map((token, j) => (\n                    <span key={j} {...getTokenProps({ token, key: j })} />\n                  ))}\n                </div>\n              ))}\n            </Pre>\n          )}\n        </Highlight>\n        {isFlagHidden ? null : this.renderFlag()}\n      </Container>\n    );\n  }\n}\n\nexport default CodeBlock;\n","import styled from 'styled-components';\n\nexport const Heading1 = styled.h1`\n  color: #7a61c1;\n`;\n\nexport const Heading2 = styled.h2`\n  color: #8fd3da;\n`;\n\nexport const GitHubButtonContainer = styled.div`\n  margin-bottom: 20px;\n  span {\n    margin: 5px;\n    > a {\n      background: white;\n      border: 2px solid crimson;\n    }\n  }\n`;\n\nexport const Image = styled.img`\n  max-width: 96%;\n`;\n\nexport const Description = styled.p``;\n","import { default as Home } from './view';\nexport default Home;\n","import React from 'react';\nimport GitHubButton from 'react-github-btn';\nimport GithubCorner from 'react-github-corner';\n\nimport CodeBlock from '../components/code-block';\nimport demo from './images/demo.gif';\nimport sloth from './images/sloth.png';\nimport {\n  Description,\n  GitHubButtonContainer,\n  Heading1,\n  Heading2,\n  Image\n} from './styles';\n\nexport interface State {\n  npmInstallCode: string;\n  yarnInstallCode: string;\n}\n\nclass Home extends React.Component<{}, State> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      npmInstallCode: 'npm install cbf -g',\n      yarnInstallCode: 'yarn global add cbf'\n    };\n  }\n\n  public getInstallWithNPMCode = () => {\n    return `$ npm install cbf -g`;\n  };\n\n  public getInstallWithYarnCode = () => {\n    return `$ yarn global add cbf`;\n  };\n\n  public getExampleScriptCode = () => {\n    return `---\nexample-project:\nmessage: \"Run, build or test example project?\"\ndirectory: \"~/projects/example\"\noptions:\n    run:\n        message: \"Running example project...\"\n        command: \"yarn start\"\n    build:\n        directory: \"~/projects/example/src\"\n        message: \"Building example project...\"\n        command: \"yarn install\"\n    test:\n        message: \"Run unit or integration tests?\"\n        options:\n            unit:\n                message: \"Running example project unit tests\"\n                command: \"yarn test:unit\"\n            integration:\n                message: \"Running example project integration tests\"\n                command: \"yarn test:integration\"`;\n  };\n\n  public render() {\n    const { npmInstallCode, yarnInstallCode } = this.state;\n    return (\n      <div className=\"App\">\n        <header>\n          <Heading1>CBF</Heading1>\n          <GitHubButtonContainer>\n            <GitHubButton\n              className=\"github-button\"\n              href=\"https://github.com/joshuatvernon/cbf\"\n              data-icon=\"octicon-star\"\n              data-size=\"large\"\n              aria-label=\"Star joshuatvernon/cbf on GitHub\"\n            >\n              Star\n            </GitHubButton>\n            <GitHubButton\n              href=\"https://github.com/joshuatvernon/cbf/subscription\"\n              data-icon=\"octicon-eye\"\n              data-size=\"large\"\n              aria-label=\"Watch joshuatvernon/cbf on GitHub\"\n            >\n              Watch\n            </GitHubButton>\n          </GitHubButtonContainer>\n          <Image src={sloth} className=\"logo\" alt=\"cbf logo\" />\n          <Description>\n            CBF is a simple CLI tool for developers who <i>can't be f#@!'d</i>{' '}\n            learning or remembering all the commands they have to run day to day\n            or just in a specific repo.\n          </Description>\n          <Heading2>Install</Heading2>\n          <CodeBlock\n            code={this.getInstallWithNPMCode()}\n            language={'bash'}\n            clipboard={npmInstallCode}\n          />\n          <Description>OR</Description>\n          <CodeBlock\n            code={this.getInstallWithYarnCode()}\n            language={'bash'}\n            clipboard={yarnInstallCode}\n          />\n          <Heading2>Demo</Heading2>\n          <Image src={demo} className=\"demo\" alt=\"cli demo\" />\n          <Heading2>Example</Heading2>\n          <CodeBlock code={this.getExampleScriptCode()} language={'yaml'} />\n        </header>\n        <GithubCorner\n          href=\"https://github.com/joshuatvernon/cbf\"\n          size=\"140\"\n          bannerColor=\"crimson\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import styled, { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');\n  body {  \n    font-family: 'Roboto', sans-serif;\n  }\n`;\n\nexport interface AppProps {\n  src: string;\n}\n\nexport const AppContainer = styled.div`\n  text-align: center;\n  background-image: url('${(props: AppProps) => props.src}');\n`;\n","import React from 'react';\n\nimport Home from './home';\nimport leaves from './images/leaves.png';\nimport { AppContainer, GlobalStyle } from './styles';\n\nconst App: React.FC = () => {\n  return (\n    <AppContainer src={leaves}>\n      <GlobalStyle />\n      <Home />\n    </AppContainer>\n  );\n};\n\nexport default App;\n","/* tslint:disable:no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}